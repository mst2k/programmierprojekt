name: Continuous Integration


on:  
  push: 
    branches-ignore:
      - main # deploy.yml checks 
  pull_request:
    branches:
      - main

jobs: 
  test_coverage: 
    name: Test and Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with: 
        node-version: 20
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Run type check
      run: npm run type-check

    - name: Build project
      run: npm run build
      env:
        CI: true

    - name: Upload coverage reports to Codecov
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: ./frontend/coverage/
  
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with: 
        languages: [javascript, typescript]
  
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run Dependency Review
      uses: actions/dependency-review-action@v3

  coverage:
    name: Code coverage report
    needs: test_coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    
    - name: Download coverage reports
      uses: actions/download-artifact@v3
      with:
        name: coverage
        path: coverage

    - name: Display coverage summary
      run: |
        echo "Coverage Summary:"
        cat coverage/coverage-summary.json | jq .
      shell: bash

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/coverage-summary.json
        badge: true
        format: markdown
        output: both

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md